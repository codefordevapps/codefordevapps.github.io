{"version":3,"sources":["image/splashscreen.png","image/login1.png","image/login2.png","serviceWorker.js","screen/MainScreen.js","screen/MainReactjsScreen.js","screen/DetailScreen.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","MainScreen","className","class","style","backgroundColor","id","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","marginTop","pathname","state","imagePath","require","src","alt","Component","MainReactjsScreen","DetailScreen","this","props","ReactDOM","render","Route","exact","path","component","DashBoard","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bda287c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/splashscreen.c647cfbe.png\";","module.exports = __webpack_public_path__ + \"static/media/login1.92e752c3.png\";","module.exports = __webpack_public_path__ + \"static/media/login2.40fd25b8.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass MainScreen extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <nav class=\"navbar navbar-b navbar-trans navbar-expand-md\" style={{backgroundColor: '#000000'}} id=\"mainNav\">\r\n                    <div class=\"container\">\r\n                    <Link class=\"navbar-brand\" to=\"/\">CodeForDevApps</Link>\r\n                    <button class=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarDefault\"\r\n                        aria-controls=\"navbarDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                    </button>\r\n                    <div class=\"navbar-collapse collapse justify-content-end\" id=\"navbarDefault\">\r\n                        <ul class=\"navbar-nav\">\r\n                        <li class=\"nav-item\">\r\n                            <Link class=\"nav-link\" to=\"/\">React Native</Link>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <Link class=\"nav-link\" to=\"/React-js\">React js</Link>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <Link class=\"nav-link\" to=\"#contact\">Contact</Link>\r\n                        </li>\r\n                        </ul>\r\n                    </div>\r\n                    </div>\r\n                </nav> \r\n                <div id=\"home\" class=\"intro\" style={{backgroundColor: 'black'}}>\r\n                    <div class=\"overlay-itro\"></div>\r\n                    <div class=\"intro-content display-table\">\r\n                    <div class=\"table-cell\">\r\n                        <div class=\"container\">\r\n                            <h2 class=\"intro-title mb-4\">React Native Source code</h2>\r\n                            <p class=\"intro-subtitle\"><span class=\"\">For Mobile Application Developer</span></p>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{marginTop: '30px'}}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-1\"/>\r\n                            <div class=\"col-sm-3\">\r\n                                <Link class=\"nav-link\" to={{\r\n                                    pathname: '/ReactNative-code',\r\n                                    state: {\r\n                                        imagePath: require('../image/splashscreen.png')\r\n                                    }\r\n                                }}>\r\n                                    <img className=\"img-fluid\" src={require('../image/splashscreen.png')} alt=\"\"/>\r\n                                </Link>\r\n                            </div>\r\n                            <div class=\"col-sm-4\">\r\n                                <Link class=\"nav-link\" to={{\r\n                                    pathname: '/ReactNative-code',\r\n                                    state: {\r\n                                        imagePath: require('../image/login1.png')\r\n                                    }\r\n                                }}>\r\n                                    <img className=\"img-fluid\" src={require('../image/login1.png')} alt=\"\"/>\r\n                                </Link>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <Link class=\"nav-link\" to={{\r\n                                    pathname: '/ReactNative-code',\r\n                                    state: {\r\n                                        imagePath: require('../image/login2.png')\r\n                                    }\r\n                                }}>\r\n                                    <img className=\"img-fluid\" src={require('../image/login2.png')} alt=\"\"/>\r\n                                </Link>\r\n                            </div>\r\n                            <div class=\"col-sm-1\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default MainScreen;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass MainReactjsScreen extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <nav class=\"navbar navbar-b navbar-trans navbar-expand-md\" style={{backgroundColor: '#000000'}} id=\"mainNav\">\r\n                    <div class=\"container\">\r\n                    <Link class=\"navbar-brand\" to=\"/\">CodeForDevApps</Link>\r\n                    <button class=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarDefault\"\r\n                        aria-controls=\"navbarDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                    </button>\r\n                    <div class=\"navbar-collapse collapse justify-content-end\" id=\"navbarDefault\">\r\n                        <ul class=\"navbar-nav\">\r\n                        <li class=\"nav-item\">\r\n                            <Link class=\"nav-link\" to=\"/\">React Native</Link>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <Link class=\"nav-link\" to=\"./React-js\">React js</Link>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <Link class=\"nav-link\" to=\"#contact\">Contact</Link>\r\n                        </li>\r\n                        </ul>\r\n                    </div>\r\n                    </div>\r\n                </nav> \r\n                <div id=\"home\" class=\"intro\" style={{backgroundColor: 'black'}}>\r\n                    <div class=\"overlay-itro\"></div>\r\n                    <div class=\"intro-content display-table\">\r\n                    <div class=\"table-cell\">\r\n                        <div class=\"container\">\r\n                            <h1 class=\"intro-title mb-4\">React js Source code</h1>\r\n                            <p class=\"intro-subtitle\"><span class=\"\">For Web Application Developer</span></p>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{marginTop: '30px'}}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-4\">\r\n                               \r\n                            </div>\r\n                            <div class=\"col-sm-8\">\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default MainReactjsScreen;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass DetailScreen extends Component {\r\n\r\n    render() {\r\n        const state = this.props.location.state.imagePath;\r\n        return (\r\n            <div className=\"\">\r\n                <nav class=\"navbar navbar-b navbar-trans navbar-expand-md\" style={{backgroundColor: '#000000'}} id=\"mainNav\">\r\n                    <div class=\"container\">\r\n                    <Link class=\"navbar-brand\" to=\"/\">CodeForDevApps</Link>\r\n                    <button class=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarDefault\"\r\n                        aria-controls=\"navbarDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                    </button>\r\n                    <div class=\"navbar-collapse collapse justify-content-end\" id=\"navbarDefault\">\r\n                        <ul class=\"navbar-nav\">\r\n                        <li class=\"nav-item\">\r\n                            <Link class=\"nav-link\" to=\"/\">React Native</Link>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <Link class=\"nav-link\" to=\"./React-js\">React js</Link>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <Link class=\"nav-link\" to=\"#contact\">Contact</Link>\r\n                        </li>\r\n                        </ul>\r\n                    </div>\r\n                    </div>\r\n                </nav> \r\n                {/* <div id=\"home\" class=\"intro\" style={{backgroundColor: 'black'}}>\r\n                    <div class=\"overlay-itro\"></div>\r\n                    <div class=\"intro-content display-table\">\r\n                    <div class=\"table-cell\">\r\n                        <div class=\"container\">\r\n                            <h1 class=\"intro-title mb-4\">React js Source code</h1>\r\n                            <p class=\"intro-subtitle\"><span class=\"\">For Web Application Developer</span></p>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div> */}\r\n                <div style={{marginTop: '30px'}}>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-1\"/>\r\n                            <div class=\"col-sm-4\">\r\n                                {state &&\r\n                                <img className=\"img-fluid\" src={state} alt=\"\"/>\r\n                                }\r\n                            </div>\r\n                            <div class=\"col-sm-6\">\r\n                                \r\n                            </div>\r\n                            <div class=\"col-sm-1\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default DetailScreen;","\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport './css/linearicons.css';\nimport './css/font-awesome.min.css';\nimport './css/themify-icons.css';\nimport './css/bootstrap.css';\nimport './css/main.css';\n\nimport 'jquery';\nimport 'bootstrap';\n\nimport DashBoard  from '../src/screen/MainScreen';\nimport MainReactjsScreen  from '../src/screen/MainReactjsScreen';\nimport DetailScreen from './screen/DetailScreen';\n\nReactDOM.render(\n    <Provider>\n    <div>\n      <Router>\n        <div>\n          <Route exact path={'/'} component={DashBoard} />\n          <Route exact path={'/React-js'} component={MainReactjsScreen} />\n          <Route exact path={'/ReactNative-code'} component={DetailScreen} />\n        </div>\n      </Router>\n    </div>\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}